//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Fidobot {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class FidoStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal FidoStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Fidobot.FidoStrings", typeof(FidoStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Day(s)&quot;.
        /// </summary>
        public static string days {
            get {
                return ResourceManager.GetString("days", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Specify a thread or forum.&quot;.
        /// </summary>
        public static string donteatcmd_channel_description {
            get {
                return ResourceManager.GetString("donteatcmd-channel-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Disables Fido from eating this channel or forum.&quot;.
        /// </summary>
        public static string donteatcmd_description {
            get {
                return ResourceManager.GetString("donteatcmd-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Specify a thread or forum.&quot;.
        /// </summary>
        public static string eatcmd_channel_description {
            get {
                return ResourceManager.GetString("eatcmd-channel-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Eat this thread or configure specified forum for Fido.&quot;.
        /// </summary>
        public static string eatcmd_description {
            get {
                return ResourceManager.GetString("eatcmd-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;(Forum only) Should Fido eat existing threads with given time options ?&quot;.
        /// </summary>
        public static string eatcmd_eatexisting_description {
            get {
                return ResourceManager.GetString("eatcmd-eatexisting-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;(Forum only) Should Fido eat future threads with given time options ?&quot;.
        /// </summary>
        public static string eatcmd_eatfuture_description {
            get {
                return ResourceManager.GetString("eatcmd-eatfuture-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Time configuration type&quot;.
        /// </summary>
        public static string eatcmd_timetype_description {
            get {
                return ResourceManager.GetString("eatcmd-timetype-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Time configuration value&quot;.
        /// </summary>
        public static string eatcmd_timevalue_description {
            get {
                return ResourceManager.GetString("eatcmd-timevalue-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Hour(s)&quot;.
        /// </summary>
        public static string hours {
            get {
                return ResourceManager.GetString("hours", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Minute(s)&quot;.
        /// </summary>
        public static string minutes {
            get {
                return ResourceManager.GetString("minutes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;No&quot;.
        /// </summary>
        public static string no {
            get {
                return ResourceManager.GetString("no", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;**ERROR:** I can only be enabled on Forums or Threads. I&apos;m a picky eater.&quot;.
        /// </summary>
        public static string output_channel_wrongtype {
            get {
                return ResourceManager.GetString("output-channel-wrongtype", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Was I supposed to eat the threads in this forum ? They weren&apos;t on my feeding schedule...&quot;.
        /// </summary>
        public static string output_donteat_forum_notfound {
            get {
                return ResourceManager.GetString("output-donteat-forum-notfound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Okaaayyy... I won&apos;t eat the threads in this forum.&quot;.
        /// </summary>
        public static string output_donteat_forum_success {
            get {
                return ResourceManager.GetString("output-donteat-forum-success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Okaaayyy... I will only eat that thread in {0} now because it is in a forum that is on my feeding schedule.&quot;.
        /// </summary>
        public static string output_donteat_thread_backtoforum {
            get {
                return ResourceManager.GetString("output-donteat-thread-backtoforum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Was I supposed to eat that thread ? It wasn&apos;t on my feeding schedule...&quot;.
        /// </summary>
        public static string output_donteat_thread_notfound {
            get {
                return ResourceManager.GetString("output-donteat-thread-notfound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Was I supposed to eat that thread outside of its forum feeding schedule which is in {0} ? It wasn&apos;t on my feeding schedule...&quot;.
        /// </summary>
        public static string output_donteat_thread_notfoundbutinforum {
            get {
                return ResourceManager.GetString("output-donteat-thread-notfoundbutinforum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Okaaayyy... I won&apos;t eat that thread.&quot;.
        /// </summary>
        public static string output_donteat_thread_success {
            get {
                return ResourceManager.GetString("output-donteat-thread-success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;**ERROR:** `/donteat` can only be used on Forums or Threads. I&apos;m a picky eater.&quot;.
        /// </summary>
        public static string output_donteat_wrongchanneltype {
            get {
                return ResourceManager.GetString("output-donteat-wrongchanneltype", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;I already had &apos;#{0}&apos; on my feeding schedule, I was supposed to eat its threads {1} after their creation.\r\nBut fine, I will change my schedule and eat them {2} after their creation instead.\r\nPesky humans, messing with my eating schedule...&quot;.
        /// </summary>
        public static string output_eat_forum_overwrote {
            get {
                return ResourceManager.GetString("output-eat-forum-overwrote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;&apos;#{0}&apos; just for me ? Yaaay ! I will eat its threads {1} after their creation.\r\nHave I eaten existing threads ? **{2}**\r\nWill I eat future threads ? **{3}**&quot;.
        /// </summary>
        public static string output_eat_forum_success {
            get {
                return ResourceManager.GetString("output-eat-forum-success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Because this thread is inside a forum I have on my feeding schedule, I was supposed to eat it in {0}.\r\nBut fine, I will eat &apos;#{1}&apos; in {2} instead.\r\nPesky humans, messing with my eating schedule...&quot;.
        /// </summary>
        public static string output_eat_thread_forumoverride {
            get {
                return ResourceManager.GetString("output-eat-thread-forumoverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;I already planned to eat this thread in {0}.\r\nBut fine, I will eat &apos;#{1}&apos; in {2} instead.\r\nPesky humans, messing with my eating schedule...&quot;.
        /// </summary>
        public static string output_eat_thread_overwrote {
            get {
                return ResourceManager.GetString("output-eat-thread-overwrote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Noted ! I will eat {0} in {1}. I&apos;m salivating already...&quot;.
        /// </summary>
        public static string output_eat_thread_success {
            get {
                return ResourceManager.GetString("output-eat-thread-success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;**ERROR:** `/eat` can only be used on Forums or Threads. I&apos;m a picky eater.&quot;.
        /// </summary>
        public static string output_eat_wrongchanneltype {
            get {
                return ResourceManager.GetString("output-eat-wrongchanneltype", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;**ERROR:** Eat existing can only be enabled on Forum channels.&quot;.
        /// </summary>
        public static string output_eatexisting_notforum {
            get {
                return ResourceManager.GetString("output-eatexisting-notforum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;**ERROR:** Eat future can only be enabled on Forum channels.&quot;.
        /// </summary>
        public static string output_eatfuture_notforum {
            get {
                return ResourceManager.GetString("output-eatfuture-notforum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;**ERROR:** You don&apos;t have the necessary permissions on this channel to execute that command.&quot;.
        /// </summary>
        public static string output_missingperm_channel {
            get {
                return ResourceManager.GetString("output-missingperm-channel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;**ERROR:** You don&apos;t have the necessary permissions on this server to execute that command.&quot;.
        /// </summary>
        public static string output_missingperm_server {
            get {
                return ResourceManager.GetString("output-missingperm-server", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;- &apos;#{0}&apos; | Eat its threads {1} after creation date\r\n&quot;.
        /// </summary>
        public static string output_sniff_forums_entry {
            get {
                return ResourceManager.GetString("output-sniff-forums-entry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;- &apos;#{0}&apos; | Eat its threads {1} after creation date | Only eating threads created after {2} UTC\r\n&quot;.
        /// </summary>
        public static string output_sniff_forums_entry_started {
            get {
                return ResourceManager.GetString("output-sniff-forums-entry-started", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;*sniff sniff*... I found these forums on my feeding schedule:\r\n&quot;.
        /// </summary>
        public static string output_sniff_forums_intro {
            get {
                return ResourceManager.GetString("output-sniff-forums-intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;*sniff sniff*... I didn&apos;t find any forum on my feeding schedule.\r\n&quot;.
        /// </summary>
        public static string output_sniff_forums_none {
            get {
                return ResourceManager.GetString("output-sniff-forums-none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;\r\nThat&apos;s my whole feeding schedule ! I&apos;m hungry just thinking about it now...&quot;.
        /// </summary>
        public static string output_sniff_outro {
            get {
                return ResourceManager.GetString("output-sniff-outro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;This method can only be used inside a Discord Server.&quot;.
        /// </summary>
        public static string output_sniff_outsideguild {
            get {
                return ResourceManager.GetString("output-sniff-outsideguild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;- &apos;#{0}&apos; | Eat in {1}\r\n&quot;.
        /// </summary>
        public static string output_sniff_threads_entry {
            get {
                return ResourceManager.GetString("output-sniff-threads-entry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;\r\n*sniff sniff*... I found these threads on my feeding schedule:\r\n&quot;.
        /// </summary>
        public static string output_sniff_threads_intro {
            get {
                return ResourceManager.GetString("output-sniff-threads-intro", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;\r\n*sniff sniff*... I didn&apos;t find any thread on my feeding schedule.\r\n&quot;.
        /// </summary>
        public static string output_sniff_threads_none {
            get {
                return ResourceManager.GetString("output-sniff-threads-none", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;**ERROR:** The time type you provided is invalid: {0}&quot;.
        /// </summary>
        public static string output_timetype_invalid {
            get {
                return ResourceManager.GetString("output-timetype-invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;**ERROR:** Time value is invalid (0 is invalid): {0}&quot;.
        /// </summary>
        public static string output_timevalue_invalid {
            get {
                return ResourceManager.GetString("output-timevalue-invalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;**ERROR:** So you don&apos;t want me to eat existing channels, and you don&apos;t want me to eat future channels either...\r\nAre you trying to starve me ?!&quot;.
        /// </summary>
        public static string output_whatdoido {
            get {
                return ResourceManager.GetString("output-whatdoido", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Second(s)&quot;.
        /// </summary>
        public static string seconds {
            get {
                return ResourceManager.GetString("seconds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Lists configured forums and threads.&quot;.
        /// </summary>
        public static string sniffcmd_description {
            get {
                return ResourceManager.GetString("sniffcmd-description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &quot;Yes&quot;.
        /// </summary>
        public static string yes {
            get {
                return ResourceManager.GetString("yes", resourceCulture);
            }
        }
    }
}
